rm(list=ls())
library(MASS)
source("C:/Users/Hp/Documents/mcmc_with_rahul/simulations_linear_regression/grad_lin.R")
Rep <- 1
#Sample Size
n <- 5e6;
#Iterations
Iter <- n;
alp <- .51
bet <- 0.5416+0.4671*alp-0.6930/log10(n)#(1+alp)/2
nparm <- 5
parm <- rep(5,nparm)
two_seq <- 2^(seq(10:40))
am <- numeric(1000)
cutf <- 1000 #Dropping initial Iterates of SGD
#Equal Batch Size Configuration
bn <- min(two_seq[two_seq >= (Iter - cutf)^bet])
#No. of batches
an <- floor((Iter - cutf)/bn)
sg <- matrix(nrow = Iter, ncol = nparm);
sg_ct <- matrix(nrow=Iter - cutf,ncol = nparm)
#Iterates stored
sigm <- diag(nparm)
svd <- sigm
svd(sigm)
#Iterates stored
sigm <- 5*diag(nparm)
svd <- svd(sigm)
svd
decomp_sigm<- svd(sigm)
decomp_sigm
rm(list=ls())
library(MASS)
source("C:/Users/Hp/Documents/mcmc_with_rahul/simulations_linear_regression/grad_lin.R")
Rep <- 1
#Sample Size
n <- 5e6;
#Iterations
Iter <- n;
alp <- .51
bet <- 0.5416+0.4671*alp-0.6930/log10(n)#(1+alp)/2
nparm <- 5
parm <- rep(5,nparm)
two_seq <- 2^(seq(10:40))
am <- numeric(1000)
cutf <- 1000 #Dropping initial Iterates of SGD
#Equal Batch Size Configuration
bn <- min(two_seq[two_seq >= (Iter - cutf)^bet])
#No. of batches
an <- floor((Iter - cutf)/bn)
sg <- matrix(nrow = Iter, ncol = nparm);
sg_ct <- matrix(nrow=Iter - cutf,ncol = nparm)
#Iterates stored
# Sigma Matrix Stored with Square root
sigm <- 5*diag(nparm)
decomp_sigm<- svd(sigm)
dig_sig <- decomp_sigm$d
v_mat <- decomp_sigm$u
sqrt_sig <- v_mat%*%sqrt(dig_sig)%*%t(v_mat)
print(sqrt_sig)
sqrt_sig <- v_mat%*%diag(sqrt(dig_sig))%*%t(v_mat)
print(sqrt_sig)
sqrt(dig_sig)
