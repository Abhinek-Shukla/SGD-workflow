burn_in = 1000
grad_lad <- function(sg,y,x, tau = 0.5){
(tau - as.numeric( y - t(x) %*% sg < 0 )) %*% x
}
##########################################################################################################
comb <- function(x, ...) {
lapply(seq_along(x),
function(i) c(x[[i]], lapply(list(...), function(y) y[[i]])))
}
sigm <- qr.solve(A) * (tau*(1-tau))/ (1/2^2)
sam_siz <- sam_siz[sam_siz <= max_sam]
n <- sam_siz[length(sam_siz)]
parm <- seq(1 / nparm, 1, length.out = nparm)
crt_val <- qchisq(qlev, df = nparm)
sg <- matrix(nrow = n + burn_in, ncol = nparm);
sg_ct <- matrix(nrow = n , ncol = nparm)
cns_ln <- 3*length(cns)# 3 multiplied due to three types of beta under study
forb_ibs <- volm_ibs <- cover_ibs <- forb_ibs_norm <- matrix(rep(0,length(sam_siz)*Rep), nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
cover_orc<- matrix(rep(0,length(sam_siz)*Rep),nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
volm_ebs         <- forb_ebs <- forb_ebs_norm <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim = c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
cover_ebs        <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
volm_ebs_ls      <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
forb_ebs_norm_ls <- cover_ebs_ls  <- forb_ebs_ls <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
cover_ebs_ls
cn = 1
x <- matrix(rnorm((n + burn_in) * nparm), nrow = (n + burn_in), ncol = nparm)
#noisy Observed Data
y <- x %*% parm + rdoublex(n + burn_in, mu = 0,lambda = 1)
#Learning Rate
eta <- numeric(n + burn_in)
sg[1,] <- rep(0, nparm)
for(i in 2 : (n + burn_in)){
eta[i] <- i^( - alp)
sg[i,] <- sg[i - 1,] + eta_cns * eta[i] * grad_lad(sg[i - 1,], y[i], x[i,])
}
sg_ct_full <- sg[(burn_in + 1) : (n + burn_in),]
library(smoothmest)
#noisy Observed Data
y <- x %*% parm + rdoublex(n + burn_in, mu = 0,lambda = 1)
#Learning Rate
eta <- numeric(n + burn_in)
sg[1,] <- rep(0, nparm)
for(i in 2 : (n + burn_in)){
eta[i] <- i^( - alp)
sg[i,] <- sg[i - 1,] + eta_cns * eta[i] * grad_lad(sg[i - 1,], y[i], x[i,])
}
sg_ct_full <- sg[(burn_in + 1) : (n + burn_in),]
for ( smpl in 1 : length(sam_siz))
{
sg_ct <- sg_ct_full[1 : sam_siz[smpl], ]
asg <- colMeans(sg_ct)
#Oracle coverage
cover_orc[cn, smpl] <- as.numeric(sam_siz[smpl]  * t(asg - parm) %*% solve(sigm) %*% (asg - parm) <= crt_val)
#IBS  related coverages and volume
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 0.1)
forb_ibs[cn, smpl]  <-  norm(ibs_mean - sigm, "F")/ norm(sigm, "F")  #sqrt(sum((ibs_mean - sigm) ^ 2))/sqrt(sum(sigm ^ 2))
forb_ibs_norm[cn, smpl] <- norm(ibs_mean, "F")
volm_ibs[cn, smpl]  <- (det(ibs_mean)) ^ (1 / nparm)
cover_ibs[cn, smpl] <- as.numeric(sam_siz[smpl]  * t(asg - parm) %*% qr.solve(ibs_mean) %*% (asg - parm) <= crt_val)
count = 1
#Different settings of EBS, for values of cns and three types of beta
for( mk in 1 : length(cns)){ #Different values of constant cns
for(bt_typ in 1 : 3){
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 1)
forb_ebs_norm[smpl,  cn, count] <- sqrt(sum((ebs_mean) ^ 2))
forb_ebs[smpl,  cn, count]  <- sqrt(sum((ebs_mean - sigm) ^ 2))/sqrt(sum(sigm ^ 2))
volm_ebs[smpl,  cn, count]  <- (det(ebs_mean) ) ^ (1 / nparm)
cover_ebs[smpl,  cn, count] <- as.numeric(sam_siz[smpl]  * t(asg - parm ) %*% qr.solve(ebs_mean ) %*% (asg - parm) <= crt_val)
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 2)
forb_ebs_norm_ls[smpl,  cn, count] <- sqrt(sum((ebs_mean) ^ 2))
forb_ebs_ls[smpl,  cn, count]  <- sqrt(sum((ebs_mean - sigm) ^ 2))/sqrt(sum(sigm ^ 2))
volm_ebs_ls[smpl,  cn, count]  <- (det(ebs_mean) ) ^ (1 / nparm)
cover_ebs_ls[smpl,  cn, count] <- as.numeric(sam_siz[smpl]  * t(asg - parm ) %*% qr.solve(ebs_mean ) %*% (asg - parm) <= crt_val)
count = count + 1
}
}
}
setwd("~/GitHub/Batch_Means_Online")
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 0.1)
ibs_jasa_mean(sg_ct, alp, cns = 0.1)
source("./../ebs_batch_mean.R")
source("./../ibs_jasa_mean.R")
source("./../sqrt_mat.R")
source("ibs_jasa_mean.R")
source("ebs_jasa_mean.R")
source("ebs_batch_mean.R")
source("sqrt_mat.R")
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 0.1)
cover_ibs[cn, smpl] <- as.numeric(sam_siz[smpl]  * t(asg - parm) %*% qr.solve(ibs_mean) %*% (asg - parm) <= crt_val)
forb_ibs[cn, smpl]  <-  norm(ibs_mean - sigm, "F")/ norm(sigm, "F")  #sqrt(sum((ibs_mean - sigm) ^ 2))/sqrt(sum(sigm ^ 2))
forb_ibs_norm[cn, smpl] <- norm(ibs_mean, "F")
volm_ibs[cn, smpl]  <- (det(ibs_mean)) ^ (1 / nparm)
cover_ibs[cn, smpl] <- as.numeric(sam_siz[smpl]  * t(asg - parm) %*% qr.solve(ibs_mean) %*% (asg - parm) <= crt_val)
count = 1
#Different settings of EBS, for values of cns and three types of beta
for( mk in 1 : length(cns)){ #Different values of constant cns
for(bt_typ in 1 : 3){
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 1)
forb_ebs_norm[smpl,  cn, count] <- sqrt(sum((ebs_mean) ^ 2))
forb_ebs[smpl,  cn, count]  <- sqrt(sum((ebs_mean - sigm) ^ 2))/sqrt(sum(sigm ^ 2))
volm_ebs[smpl,  cn, count]  <- (det(ebs_mean) ) ^ (1 / nparm)
cover_ebs[smpl,  cn, count] <- as.numeric(sam_siz[smpl]  * t(asg - parm ) %*% qr.solve(ebs_mean ) %*% (asg - parm) <= crt_val)
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 2)
forb_ebs_norm_ls[smpl,  cn, count] <- sqrt(sum((ebs_mean) ^ 2))
forb_ebs_ls[smpl,  cn, count]  <- sqrt(sum((ebs_mean - sigm) ^ 2))/sqrt(sum(sigm ^ 2))
volm_ebs_ls[smpl,  cn, count]  <- (det(ebs_mean) ) ^ (1 / nparm)
cover_ebs_ls[smpl,  cn, count] <- as.numeric(sam_siz[smpl]  * t(asg - parm ) %*% qr.solve(ebs_mean ) %*% (asg - parm) <= crt_val)
count = count + 1
}
}
cover_ebs
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_1.RData")
forb_ebs_norm
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_1.RData")
forb_ebs_norm
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_1.RData")
forb_ebs_norm_ls
cover_orc
cover_ibs
count
forb_ebs
volm_ebs         <- forb_ebs <- forb_ebs_norm <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim = c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
volm_ebs
Rep = 20
volm_ebs         <- forb_ebs <- forb_ebs_norm <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim = c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
forb_ebs_norm
length(sam_siz)
c(length(sam_siz), Rep, cns_ln)
volm_ebs         <- forb_ebs <- forb_ebs_norm <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim = c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
volm_ebs
cns_ln * Rep *
1
cns_ln
cns = c(0.01, 0.05, 0.1)
cns_ln <- 3*length(cns)# 3 multiplied due to three types of beta under study
forb_ibs <- volm_ibs <- cover_ibs <- forb_ibs_norm <- matrix(rep(0,length(sam_siz)*Rep), nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
Rep
volm_ebs
volm_ebs[,,9]
volm_ebs
cns = c(0.01, 0.05, 0.1, 0.2)
cns_ln <- 3*length(cns)# 3 multiplied due to three types of beta under study
forb_ibs <- volm_ibs <- cover_ibs <- forb_ibs_norm <- matrix(rep(0,length(sam_siz)*Rep), nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
cover_orc<- matrix(rep(0,length(sam_siz)*Rep),nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
volm_ebs         <- forb_ebs <- forb_ebs_norm <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim = c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
volm_ebs
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_1.RData")
cns = c(0.01, 0.05, 0.1, 0.2, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_2.RData")
cns = c(0.01, 0.05, 0.1, 0.2, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_3.RData")
cns = c(0.01, 0.05, 0.1, 0.2, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_4.RData")
colMeans(cover_ibs)
colMeans(cover_orc)
alp
eta_cns
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_4.RData")
alp
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_5.RData")
eta_cns
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_4.RData")
eta_cns
colMeans(cover_orc)
colMeans(cover_ibs)
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_1.RData")
eta_cns
rm(list = ls())
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_1.RData")
eta_cns
alp
colMeans(cover_orc)
colMeans(cover_ibs)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cns = c(0.01, 0.05, 0.1, 0.2, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_6.RData")
alp
eta_cns
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_3.RData")
alp
eta_cns
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_2.RData")
alp
rm(list = ls())
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_2.RData")
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cns = c(0.01, 0.05, 0.1, 0.2, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
alp
eta_cns
rm(list = ls())
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_7.RData")
cns = c(0.01, 0.05, 0.1, 0.2, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
eta_cns
ap
alp
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_8.RData")
cns = c(0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
eta_cns
alp
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_9.RData")
eta_cns
cns = c(0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/linear_lad/out/linear_lad_indep_n_1e+06_dim_20_eta_10.RData")
cns = c(0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
