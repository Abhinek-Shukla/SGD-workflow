library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
setwd("C:/Users/abhin/Downloads/logistic")
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ];
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads/SGD-workflow-main/SGD-workflow-main/Examples/logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ];
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print((train_indx+1):nrow(dta))
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print(is.na(train_indx+1):nrow(dta))
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print(sum(is.na((train_indx+1):nrow(dta))))
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print((length((train_indx+1):nrow(dta))))
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print(nrow(dta))
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
(train_indx+1):nrow(dta)
nrow(dta)
(train_indx+1)
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print(train_indx+1)
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print(train_indx+1)
train = dta[1:train_indx, ];
dta = train;
print(lenth(dta))
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print(train_indx+1)
train = dta[1:train_indx, ];
dta = train;
print(length(dta))
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ]; print(train_indx+1)
train = dta[1:train_indx, ];
dta = train;
print(dim(dta))
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads//logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ];
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads/logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
seq(0.01, .3, length = 50)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ];
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads/logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, .3, length = 50)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ];
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads/logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 60, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ];
train = dta[1:train_indx, ];
dta = train;
dta[, 1] <- 2 * dta[, 1] - 1
log_batch_fn(dta = dta, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads/logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
# First download train.csv and test.csv from the following link
# https://www.kaggle.com/competitions/santander-customer-transaction-prediction/data
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
seq_len <- seq(60, 90, by = 10)
for(i in 1:seq_len){
train_percent <- seq_len[i]
dta            <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
test = dta[((train_indx+1):nrow(dta)), ];
train = dta[1:train_indx, ];
# dta = train;
train[, 1] <- 2 * train[, 1] - 1
log_batch_fn(dta = train, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("C:/Users/abhin/Downloads/logistic/out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
}
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
dta_org <- read.csv(file="covtype.csv")
gc()
gc()
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
library(mvtnorm)
source("logistic_back_funcs.R")
source("pred_main.R")
source("plot_misclass.R")
source("ebs.R")
dta_org <- read.csv(file="covtype.csv")
cutoffs <- seq(0.01, 0.9, length = 500)
train_percent <- 70
dta      <- dta_org[, c(55, c(1:20, 22:28, 30:53))]
dta[, 1] <- ifelse(dta[, 1] >= 2, 1, 0)
train_indx <- as.integer(0.01*train_percent*nrow(dta))
train      <- dta[1:train_indx, ];
test       <- dta[((train_indx+1):nrow(dta)), ];
train[, 1] <- 2 * train[, 1] - 1
log_batch_fn(dta = train, test = test,
train_percent = train_percent, cutoffs = cutoffs)
load(paste0("/out/logistic_pred", train_percent, ".Rdata"))
train_percent
load(paste0("./out/logistic_pred", train_percent, ".Rdata"))
plot_misclass(cutoffs, train_percent, misclass, misclass.lb)
