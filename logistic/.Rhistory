cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
gradnt_log <- function(y,a,sg){
tmp <- (c( 1 + exp(  y*t(a )%*% (sg))))
p_thet <- 1/ tmp
return(-y*p_thet*a)
}
comb <- function(x, ...) {
lapply(seq_along(x),
function(i) c(x[[i]], lapply(list(...), function(y) y[[i]])))
}
setwd("~/GitHub/Batch_Means_Online/logistic")
max_sam <- 1e6
nparm <- 20
nam_matrix = "indep"
Rep = 1
ncores_par = 1
cns = seq(0.2, 2, by =0.2
)
gradnt_log <- function(y,a,sg){
tmp <- (c( 1 + exp(  y*t(a )%*% (sg))))
p_thet <- 1/ tmp
return(-y*p_thet*a)
}
comb <- function(x, ...) {
lapply(seq_along(x),
function(i) c(x[[i]], lapply(list(...), function(y) y[[i]])))
}
A = diag(nparm)
eta_cns = 0.5
sam_siz = c(1e5,2e5,5e5,8e5,1e6,5e6,1e7)
qlev = 0.95
alp = .505
burn_in = 1000
nam_matrix = "indep"
sam_siz <- sam_siz[sam_siz <= max_sam]
n <- sam_siz[length(sam_siz)]
sam_siz
n
parm <- seq(1 / nparm, 1, length.out = nparm)
load("out/sigm_inv_logist.RData")
sigm_inv <- get(paste("sigm_inv_",nam_matrix,"_nparm_", nparm, sep= ""))
sigm <- qr.solve(sigm_inv)
sigm
sg <- matrix(nrow = n + burn_in, ncol = nparm);
sg_ct <- matrix(nrow = n , ncol = nparm)
sqrt_sig <- sqrt_mat(A)
source("./../ebs_batch_mean.R")
source("./../ibs_jasa_mean.R")
source("./../sqrt_mat.R")
sg <- matrix(nrow = n + burn_in, ncol = nparm);
sg_ct <- matrix(nrow = n , ncol = nparm)
sqrt_sig <- sqrt_mat(A)
cns_ln <- 3*length(cns)# 3 multiplied due to three types of beta under study
forb_ibs <- volm_ibs <- cover_ibs <- forb_ibs_norm <- matrix(rep(0,length(sam_siz)*Rep), nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
cover_orc<- matrix(rep(0,length(sam_siz)*Rep),nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
volm_ebs         <- forb_ebs <- forb_ebs_norm <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim = c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
cover_ebs        <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
volm_ebs_ls      <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
forb_ebs_norm_ls <- cover_ebs_ls  <- forb_ebs_ls <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
CN <- 1
cn <- 1
Rep <- 1
crt_val <- qnorm((1+qlev)/2)
crt_val
x <- matrix(rnorm((n + burn_in) * nparm), nrow = (n + burn_in), ncol = nparm)
x <- x %*% sqrt_sig
p1 <- 1/(1 + exp(-x %*% parm))# Prob of success for 1 (1-p1 is for -1)
y<-2*rbinom(n + burn_in, size = 1, prob = p1) - 1
#Learning Rate
eta <- numeric(n + burn_in)
sg[1,] <- rep(0, nparm)
for(i in 2 : (n + burn_in)){
eta[i] <- i^( - alp)
sg[i,] <- sg[i - 1,] - eta_cns * eta[i] * gradnt_log( y[i], x[i,], sg[i - 1,])
if(sum(is.na(gradnt_log( y[i], x[i,], sg[i - 1,]))) >= 1){print(c(sg[i-1],i))}
}
sg_ct_full <- sg[(burn_in + 1) : (n + burn_in),]
for ( smpl in 1 : length(sam_siz))
{
sg_ct <- sg_ct_full[1 : sam_siz[smpl], ]
asg <- colMeans(sg_ct)
print(asg)
ons <- rep(1,nparm)
#Oracle coverage
print(sam_siz[smpl])
tmp_sd <- sqrt((t(ons) %*% (sigm) %*% ons)/sam_siz[smpl])
low_orc <- t(ons) %*% asg - crt_val * tmp_sd
up_orc <-  t(ons) %*% asg + crt_val * tmp_sd
cover_orc[cn, smpl] <- as.numeric (t(ons) %*% parm <= up_orc & t(ons) %*% parm >= low_orc)
print("oracle")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
#IBS  related coverages and volume
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 1)
tmp_sd <- sqrt((t(ons) %*% ibs_mean%*%ons)/sam_siz[smpl])
low_ibs <- t(ons) %*% asg - crt_val * tmp_sd
up_ibs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ibs[cn, smpl] <- as.numeric (t(ons)%*%parm<=up_ibs&t(ons)%*%parm>=low_ibs)
print("ibs")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
count = 1
#Different settings of EBS, for values of cns and three types of beta
for( mk in 1 : length(cns)){ #Different values of constant cns
for(bt_typ in 1 : 3){
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 1)
tmp_sd <- sqrt((t(ons) %*% ebs_mean%*%ons)/sam_siz[smpl])
low_ebs <- t(ons) %*% asg - crt_val * tmp_sd
up_ebs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ebs[smpl,  cn, count] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
print("EBS")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 2)
tmp_sd <- sqrt((t(ons) %*% ebs_mean%*%ons)/sam_siz[smpl])
low_ebs <- t(ons) %*% asg - crt_val * tmp_sd
up_ebs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ebs_ls[smpl,  cn, count] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
print("Lugsail")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
count = count + 1
}
}
}
cns = 1
for ( smpl in 1 : length(sam_siz))
{
sg_ct <- sg_ct_full[1 : sam_siz[smpl], ]
asg <- colMeans(sg_ct)
#print(asg)
ons <- rep(1,nparm)
#Oracle coverage
print(sam_siz[smpl])
tmp_sd <- sqrt((t(ons) %*% (sigm) %*% ons)/sam_siz[smpl])
low_orc <- t(ons) %*% asg - crt_val * tmp_sd
up_orc <-  t(ons) %*% asg + crt_val * tmp_sd
cover_orc[cn, smpl] <- as.numeric (t(ons) %*% parm <= up_orc & t(ons) %*% parm >= low_orc)
print("oracle")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
#IBS  related coverages and volume
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 1)
tmp_sd <- sqrt((t(ons) %*% ibs_mean%*%ons)/sam_siz[smpl])
low_ibs <- t(ons) %*% asg - crt_val * tmp_sd
up_ibs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ibs[cn, smpl] <- as.numeric (t(ons)%*%parm<=up_ibs&t(ons)%*%parm>=low_ibs)
print("ibs")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
count = 1
#Different settings of EBS, for values of cns and three types of beta
for( mk in 1 : length(cns)){ #Different values of constant cns
for(bt_typ in 1 : 3){
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 1)
tmp_sd <- sqrt((t(ons) %*% ebs_mean%*%ons)/sam_siz[smpl])
low_ebs <- t(ons) %*% asg - crt_val * tmp_sd
up_ebs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ebs[smpl,  cn, count] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
print("EBS")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 2)
tmp_sd <- sqrt((t(ons) %*% ebs_mean%*%ons)/sam_siz[smpl])
low_ebs <- t(ons) %*% asg - crt_val * tmp_sd
up_ebs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ebs_ls[smpl,  cn, count] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
print("Lugsail")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
count = count + 1
}
}
}
sg_ct_full <- sg[(burn_in + 1) : (n + burn_in),]
for ( smpl in 1 : length(sam_siz))
{
sg_ct <- sg_ct_full[1 : sam_siz[smpl], ]
asg <- colMeans(sg_ct)
#print(asg)
ons <- rep(1,nparm)
#Oracle coverage
print(sam_siz[smpl])
tmp_sd <- sqrt((t(ons) %*% (sigm) %*% ons)/sam_siz[smpl])
low_orc <- t(ons) %*% asg - crt_val * tmp_sd
up_orc <-  t(ons) %*% asg + crt_val * tmp_sd
cover_orc[cn, smpl] <- as.numeric (t(ons) %*% parm <= up_orc & t(ons) %*% parm >= low_orc)
print("oracle")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
#IBS  related coverages and volume
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 1)
tmp_sd <- sqrt((t(ons) %*% ibs_mean%*%ons)/sam_siz[smpl])
low_ibs <- t(ons) %*% asg - crt_val * tmp_sd
up_ibs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ibs[cn, smpl] <- as.numeric (t(ons)%*%parm<=up_ibs&t(ons)%*%parm>=low_ibs)
print("ibs")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
count = 1
#Different settings of EBS, for values of cns and three types of beta
for( mk in 1 : length(cns)){ #Different values of constant cns
for(bt_typ in 3 : 3){
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 1)
tmp_sd <- sqrt((t(ons) %*% ebs_mean%*%ons)/sam_siz[smpl])
low_ebs <- t(ons) %*% asg - crt_val * tmp_sd
up_ebs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ebs[smpl,  cn, count] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
print("EBS")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 2)
tmp_sd <- sqrt((t(ons) %*% ebs_mean%*%ons)/sam_siz[smpl])
low_ebs <- t(ons) %*% asg - crt_val * tmp_sd
up_ebs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ebs_ls[smpl,  cn, count] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
print("Lugsail")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
count = count + 1
}
}
}
eta_cns
eta
gradnt_log( y[i], x[i,], sg[i - 1,])
A
burn_in = 10000
sam_siz <- sam_siz[sam_siz <= max_sam]
n <- sam_siz[length(sam_siz)]
parm <- seq(1 / nparm, 1, length.out = nparm)
load("out/sigm_inv_logist.RData")
sigm_inv <- get(paste("sigm_inv_",nam_matrix,"_nparm_", nparm, sep= ""))
sigm <- qr.solve(sigm_inv)
sg <- matrix(nrow = n + burn_in, ncol = nparm);
sg_ct <- matrix(nrow = n , ncol = nparm)
sqrt_sig <- sqrt_mat(A)
cns_ln <- 3*length(cns)# 3 multiplied due to three types of beta under study
forb_ibs <- volm_ibs <- cover_ibs <- forb_ibs_norm <- matrix(rep(0,length(sam_siz)*Rep), nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
cover_orc<- matrix(rep(0,length(sam_siz)*Rep),nrow = Rep, ncol = length(sam_siz), dimnames = list( 1 : Rep, sam_siz))
volm_ebs         <- forb_ebs <- forb_ebs_norm <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim = c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
cover_ebs        <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
volm_ebs_ls      <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
forb_ebs_norm_ls <- cover_ebs_ls  <- forb_ebs_ls <- array(rep(0, cns_ln * Rep * length(sam_siz)), dim=c(length(sam_siz), Rep, cns_ln), dimnames = list(sam_siz, 1:Rep, 1:cns_ln))
sam_siz
n
crt_val <- qnorm((1+qlev)/2)
x <- matrix(rnorm((n + burn_in) * nparm), nrow = (n + burn_in), ncol = nparm)
x <- x %*% sqrt_sig
p1 <- 1/(1 + exp(-x %*% parm))# Prob of success for 1 (1-p1 is for -1)
x %*% parm
y<-2*rbinom(n + burn_in, size = 1, prob = p1) - 1
#Learning Rate
eta <- numeric(n + burn_in)
sg[1,] <- rep(0, nparm)
for(i in 2 : (n + burn_in)){
eta[i] <- i^( - alp)
sg[i,] <- sg[i - 1,] - eta_cns * eta[i] * gradnt_log( y[i], x[i,], sg[i - 1,])
if(sum(is.na(gradnt_log( y[i], x[i,], sg[i - 1,]))) >= 1){print(c(sg[i-1],i))}
}
sg_ct_full <- sg[(burn_in + 1) : (n + burn_in),]
for ( smpl in 1 : length(sam_siz))
{
sg_ct <- sg_ct_full[1 : sam_siz[smpl], ]
asg <- colMeans(sg_ct)
#print(asg)
ons <- rep(1,nparm)
#Oracle coverage
print(sam_siz[smpl])
tmp_sd <- sqrt((t(ons) %*% (sigm) %*% ons)/sam_siz[smpl])
low_orc <- t(ons) %*% asg - crt_val * tmp_sd
up_orc <-  t(ons) %*% asg + crt_val * tmp_sd
cover_orc[cn, smpl] <- as.numeric (t(ons) %*% parm <= up_orc & t(ons) %*% parm >= low_orc)
print("oracle")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
#IBS  related coverages and volume
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 1)
tmp_sd <- sqrt((t(ons) %*% ibs_mean%*%ons)/sam_siz[smpl])
low_ibs <- t(ons) %*% asg - crt_val * tmp_sd
up_ibs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ibs[cn, smpl] <- as.numeric (t(ons)%*%parm<=up_ibs&t(ons)%*%parm>=low_ibs)
print("ibs")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
count = 1
#Different settings of EBS, for values of cns and three types of beta
for( mk in 1 : length(cns)){ #Different values of constant cns
for(bt_typ in 3 : 3){
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 1)
tmp_sd <- sqrt((t(ons) %*% ebs_mean%*%ons)/sam_siz[smpl])
low_ebs <- t(ons) %*% asg - crt_val * tmp_sd
up_ebs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ebs[smpl,  cn, count] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
print("EBS")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
ebs_mean <- ebs_batch_mean(sg_ct, alp, cns[mk], bt_typ, 2)
tmp_sd <- sqrt((t(ons) %*% ebs_mean%*%ons)/sam_siz[smpl])
low_ebs <- t(ons) %*% asg - crt_val * tmp_sd
up_ebs <- t(ons) %*% asg + crt_val * tmp_sd
cover_ebs_ls[smpl,  cn, count] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
print("Lugsail")
print(c(t(ons) %*% asg, t(ons) %*% parm, crt_val * tmp_sd ))
count = count + 1
}
}
}
load("~/GitHub/Batch_Means_Online/logistic/out/logistic_proj_new_indep_n_1e+06_dim_20.RData")
#For dimension 20
cns = seq(0.2, 2, by =0.2)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
x
load("~/GitHub/Batch_Means_Online/logistic/out/logistic_proj_new_indep_n_1e+06_dim_20.RData")
#For dimension 20
cns = seq(0.2, 2, by =0.2)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
x <- matrix(rnorm((n + burn_in) * nparm), nrow = (n + burn_in), ncol = nparm)
x <- x %*% sqrt_sig
p1 <- 1/(1 + exp(-t(x) %*% parm))# Prob of success for 1 (1-p1 is for -1)
1/(1 + exp(-x %*% parm))
colMeans(cover_orc)
seq(0.1, 5, by =0.5)
load("~/GitHub/Batch_Means_Online/logistic/out/logistic_proj_new_indep_n_1e+06_dim_20.RData")
#For dimension 20
cns = seq(0.1, 5, by =0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
(0.875+0.95)/2
load("~/GitHub/Batch_Means_Online/logistic/out/logistic_proj_new_indep_n_1e+06_dim_20.RData")
cns = seq(0.1, 5, by =0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr
(1+0.95)/2
(1-0.05)/2
(1-0.05/2)
source("./../ibs_jasa_mean.R")
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 1)
ibs_mean     <- ibs_jasa_mean(sg_ct, alp, cns = 0.01)
236*10/3600
load("~/GitHub/Batch_Means_Online/logistic/out/logistic_proj_new_indep_n_1e+06_dim_20.RData")
cns = seq(0.5, 4, by =0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/logistic/out/logistic_toep_n_1e+05_dim_5.RData")
cns = seq(0.5, 4, by =0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
load("~/GitHub/Batch_Means_Online/logistic/out/logistic_proj_new_indep_n_1e+06_dim_5.RData")
20
cns = seq(0.5, 4, by =0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr
cov_ebs_matr
load("~/GitHub/Batch_Means_Online/logistic/out/rep_2000_proj_results/logistic_proj_new_indep_n_1e+06_dim_20.RData")
cns = seq(0.5, 4, by =0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr-cov_ebs_matr
cov_ebs_ls_matr
load("~/GitHub/Batch_Means_Online/logistic/out/logistic_proj_new_indep_n_1e+06_dim_5.RData")
#For dimension 20
cns = seq(0.5, 4, by =0.5)# cns = 1
colMeans(cover_ibs)
colMeans(cover_orc)
cov_ebs_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_matr[,l, k  ] <-  colMeans(cover_ebs[k,, tmp1 : tmp2])
}
}
cov_ebs_ls_matr <- array(dim = c(3,length(cns),5), dimnames = list(  c("beta1", "beta2", "beta3"), cns, 1:5))
for (k in 1: 5)
{ for(l in 1:length(cns)){
tmp1 <- (3*l-2)
tmp2 <- 3*l
cov_ebs_ls_matr[,l, k  ] <-  colMeans(cover_ebs_ls[k,, tmp1 : tmp2])
}
}
cov_ebs_matr
cov_ebs_ls_matr
