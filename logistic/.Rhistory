rm(list=ls())
setwd("C:/Users/Hp/Documents/GitHub/Batch_Means_Online/logistic")
st <- Sys.time()
library(MASS)
library(matrixcalc)
source("gradnt_log.R")
source("ebs_batch_mean.R")
source("ibs_jasa_mean.R")
source("sqrt_mat.R")
Rep <- 10
cutf <- 1000 #Dropping initial Iterates of SGD
#Sample Size
n <- 1e5+cutf;
#Significance level
qlev <- 0.05
crt_val <- qnorm(1-qlev/2)
#Iterations
alp <- .505
nparm <- 5
parm <- seq(0,1,length=nparm+1)
parm <- parm[-1]
am <- numeric(1000)
Iter <- n;
sg <- matrix(nrow = Iter, ncol = nparm);
sg_ct <- matrix(nrow = Iter - cutf, ncol = nparm)
#Iterates stored
# Sigma Matrix Stored with Square root
sigm <- 1*diag(nparm)
sqrt_sig <- sqrt_mat(sigm)
forb_ebs <- forb_ibs <- numeric(Rep)
volm_ebs <- volm_ibs <- numeric(Rep)
cover_ebs <- cover_ibs <- cover_orc <- numeric(Rep)
sigm <- matrix(rep(0,nparm^2),nrow=nparm,ncol=nparm)
niter <- 1e5
for ( rp in 1:niter){
x1 <- rnorm(nparm)
sigm <- sigm + x1%*%t(x1)/(c((1+exp(t(x1)%*%parm))*(1+exp(-t(x1)%*%parm))*niter))
}
#1000  Replications to obtain stable mses
for(cn in 1 : Rep){
if(cn>=2){n <- n+cutf}
#Data Generated
x <- matrix(rnorm(n*nparm),nrow=n,ncol=nparm)
x <- x%*%sqrt_sig
p1 <- 1/(1 + exp(-x %*% parm))# Prob of success for 1 (1-p1 is for -1)
y<-2*rbinom(n,size=1,prob=p1)-1
#Learning Rate
eta <- numeric(Iter)
sg[1,] <- rep(0, nparm)
for(i in 2 : Iter){
eta[i] <- i^(-alp)
sg[i,] <- sg[i-1,] - 0.5* eta[i] * gradnt_log(y[i],x[i,],sg[i-1,])
}
sg_ct <- sg[(cutf+1):Iter,]
asg <- colMeans(  sg_ct)
n <- n - cutf
#Variance-Covariance Estimate
ebs_mean <- ebs_batch_mean(sg_ct,alp)
ibs_mean <- ibs_jasa_mean(sg_ct,alp)
#Norm Difference
forb_ebs[cn] <- sqrt(sum((ebs_mean-solve(sigm))^2))/sqrt(sum(sigm^2))
forb_ibs[cn] <- sqrt(sum((ibs_mean-solve(sigm))^2))/sqrt(sum(sigm^2))
# Volume of the matrix
volm_ebs[cn] <- (det(ebs_mean))^(1/nparm)
volm_ibs[cn] <- (det(ibs_mean))^(1/nparm)
#critical value calculation
ons <- rep(1,nparm)
low_ebs <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%ebs_mean%*%ons)/n)
up_ebs <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%ebs_mean%*%ons)/n)
cover_ebs[cn] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
low_ibs <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%ibs_mean%*%ons)/n)
up_ibs <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%ibs_mean%*%ons)/n)
cover_ibs[cn] <- as.numeric (t(ons)%*%parm<=up_ibs&t(ons)%*%parm>=low_ibs)
low_orc <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%solve(sigm)%*%ons)/n)
up_orc <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%solve(sigm)%*%ons)/n)
cover_orc[cn] <- as.numeric (t(ons)%*%parm<=up_orc&t(ons)%*%parm>=low_orc)
#cover_ebs[cn] <- as.numeric(n*t(asg-parm)%*%solve(ebs_mean)%*%(asg-parm)<=crt_val)
#cover_ibs[cn] <- as.numeric(n*t(asg-parm)%*%solve(ibs_mean)%*%(asg-parm)<=crt_val)
#cover_orc[cn] <- as.numeric(n*t(asg-parm)%*%solve(sigm)%*%(asg-parm)<=crt_val)
}
print(difftime(Sys.time(),st,units="secs"))
mean(cover_ibs)
mean(cover_ebs)
mean(cover_orc)
rm(list=ls())
setwd("C:/Users/Hp/Documents/GitHub/Batch_Means_Online/logistic")
st <- Sys.time()
library(MASS)
library(matrixcalc)
source("gradnt_log.R")
source("ebs_batch_mean.R")
source("ibs_jasa_mean.R")
source("sqrt_mat.R")
Rep <- 10
cutf <- 1000 #Dropping initial Iterates of SGD
#Sample Size
n <- 1e5+cutf;
#Significance level
qlev <- 0.05
crt_val <- qnorm(1-qlev/2)
#Iterations
alp <- .505
nparm <- 5
parm <- seq(0,1,length=nparm+1)
parm <- parm[-1]
am <- numeric(1000)
Iter <- n;
sg <- matrix(nrow = Iter, ncol = nparm);
sg_ct <- matrix(nrow = Iter - cutf, ncol = nparm)
#Iterates stored
# Sigma Matrix Stored with Square root
sigm <- 1*diag(nparm)
sqrt_sig <- sqrt_mat(sigm)
forb_ebs <- forb_ibs <- numeric(Rep)
volm_ebs <- volm_ibs <- numeric(Rep)
cover_ebs <- cover_ibs <- cover_orc <- numeric(Rep)
sigm <- matrix(rep(0,nparm^2),nrow=nparm,ncol=nparm)
niter <- 1e5
for ( rp in 1:niter){
x1 <- rnorm(nparm)
sigm <- sigm + x1%*%t(x1)/(c((1+exp(t(x1)%*%parm))*(1+exp(-t(x1)%*%parm))*niter))
}
#1000  Replications to obtain stable mses
for(cn in 1 : Rep){
if(cn>=2){n <- n+cutf}
#Data Generated
x <- matrix(rnorm(n*nparm),nrow=n,ncol=nparm)
x <- x%*%sqrt_sig
p1 <- 1/(1 + exp(-x %*% parm))# Prob of success for 1 (1-p1 is for -1)
y<-2*rbinom(n,size=1,prob=p1)-1
#Learning Rate
eta <- numeric(Iter)
sg[1,] <- rep(0, nparm)
for(i in 2 : Iter){
eta[i] <- i^(-alp)
sg[i,] <- sg[i-1,] - 0.5* eta[i] * gradnt_log(y[i],x[i,],sg[i-1,])
}
sg_ct <- sg[(cutf+1):Iter,]
asg <- colMeans(  sg_ct)
n <- n - cutf
#Variance-Covariance Estimate
ebs_mean <- ebs_batch_mean(sg_ct,alp)
ibs_mean <- ibs_jasa_mean(sg_ct,alp)
#Norm Difference
forb_ebs[cn] <- sqrt(sum((ebs_mean-solve(sigm))^2))/sqrt(sum(sigm^2))
forb_ibs[cn] <- sqrt(sum((ibs_mean-solve(sigm))^2))/sqrt(sum(sigm^2))
# Volume of the matrix
volm_ebs[cn] <- (det(ebs_mean))^(1/nparm)
volm_ibs[cn] <- (det(ibs_mean))^(1/nparm)
#critical value calculation
ons <- rep(1,nparm)
low_ebs <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%ebs_mean%*%ons)/n)
up_ebs <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%ebs_mean%*%ons)/n)
cover_ebs[cn] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
low_ibs <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%ibs_mean%*%ons)/n)
up_ibs <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%ibs_mean%*%ons)/n)
cover_ibs[cn] <- as.numeric (t(ons)%*%parm<=up_ibs&t(ons)%*%parm>=low_ibs)
low_orc <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%solve(sigm)%*%ons)/n)
up_orc <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%solve(sigm)%*%ons)/n)
cover_orc[cn] <- as.numeric (t(ons)%*%parm<=up_orc&t(ons)%*%parm>=low_orc)
#cover_ebs[cn] <- as.numeric(n*t(asg-parm)%*%solve(ebs_mean)%*%(asg-parm)<=crt_val)
#cover_ibs[cn] <- as.numeric(n*t(asg-parm)%*%solve(ibs_mean)%*%(asg-parm)<=crt_val)
#cover_orc[cn] <- as.numeric(n*t(asg-parm)%*%solve(sigm)%*%(asg-parm)<=crt_val)
}
print(difftime(Sys.time(),st,units="secs"))
mean(cover_ibs)
mean(cover_ebs)
mean(cover_orc)
source("~/mcmc_with_rahul/logistic_check_codes/results_jasa_verify.R", echo=TRUE)
rm(list=ls())
setwd("C:/Users/Hp/Documents/GitHub/Batch_Means_Online/logistic")
st <- Sys.time()
library(MASS)
library(matrixcalc)
source("gradnt_log.R")
source("ebs_batch_mean.R")
source("ibs_jasa_mean.R")
source("sqrt_mat.R")
Rep <- 100
cutf <- 1000 #Dropping initial Iterates of SGD
#Sample Size
n <- 1e5+cutf;
#Significance level
qlev <- 0.05
crt_val <- qnorm(1-qlev/2)
#Iterations
alp <- .505
nparm <- 5
parm <- seq(0,1,length=nparm+1)
parm <- parm[-1]
am <- numeric(1000)
Iter <- n;
sg <- matrix(nrow = Iter, ncol = nparm);
sg_ct <- matrix(nrow = Iter - cutf, ncol = nparm)
#Iterates stored
# Sigma Matrix Stored with Square root
sigm <- 1*diag(nparm)
sqrt_sig <- sqrt_mat(sigm)
forb_ebs <- forb_ibs <- numeric(Rep)
volm_ebs <- volm_ibs <- numeric(Rep)
cover_ebs <- cover_ibs <- cover_orc <- numeric(Rep)
sigm <- matrix(rep(0,nparm^2),nrow=nparm,ncol=nparm)
niter <- 1e5
for ( rp in 1:niter){
x1 <- rnorm(nparm)
sigm <- sigm + x1%*%t(x1)/(c((1+exp(t(x1)%*%parm))*(1+exp(-t(x1)%*%parm))*niter))
}
#1000  Replications to obtain stable mses
for(cn in 1 : Rep){
if(cn>=2){n <- n+cutf}
#Data Generated
x <- matrix(rnorm(n*nparm),nrow=n,ncol=nparm)
x <- x%*%sqrt_sig
p1 <- 1/(1 + exp(-x %*% parm))# Prob of success for 1 (1-p1 is for -1)
y<-2*rbinom(n,size=1,prob=p1)-1
#Learning Rate
eta <- numeric(Iter)
sg[1,] <- rep(0, nparm)
for(i in 2 : Iter){
eta[i] <- i^(-alp)
sg[i,] <- sg[i-1,] - 0.5* eta[i] * gradnt_log(y[i],x[i,],sg[i-1,])
}
sg_ct <- sg[(cutf+1):Iter,]
asg <- colMeans(  sg_ct)
n <- n - cutf
#Variance-Covariance Estimate
ebs_mean <- ebs_batch_mean(sg_ct,alp)
ibs_mean <- ibs_jasa_mean(sg_ct,alp)
#Norm Difference
forb_ebs[cn] <- sqrt(sum((ebs_mean-solve(sigm))^2))/sqrt(sum(sigm^2))
forb_ibs[cn] <- sqrt(sum((ibs_mean-solve(sigm))^2))/sqrt(sum(sigm^2))
# Volume of the matrix
volm_ebs[cn] <- (det(ebs_mean))^(1/nparm)
volm_ibs[cn] <- (det(ibs_mean))^(1/nparm)
#critical value calculation
ons <- rep(1,nparm)
low_ebs <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%ebs_mean%*%ons)/n)
up_ebs <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%ebs_mean%*%ons)/n)
cover_ebs[cn] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
low_ibs <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%ibs_mean%*%ons)/n)
up_ibs <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%ibs_mean%*%ons)/n)
cover_ibs[cn] <- as.numeric (t(ons)%*%parm<=up_ibs&t(ons)%*%parm>=low_ibs)
low_orc <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%solve(sigm)%*%ons)/n)
up_orc <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%solve(sigm)%*%ons)/n)
cover_orc[cn] <- as.numeric (t(ons)%*%parm<=up_orc&t(ons)%*%parm>=low_orc)
#cover_ebs[cn] <- as.numeric(n*t(asg-parm)%*%solve(ebs_mean)%*%(asg-parm)<=crt_val)
#cover_ibs[cn] <- as.numeric(n*t(asg-parm)%*%solve(ibs_mean)%*%(asg-parm)<=crt_val)
#cover_orc[cn] <- as.numeric(n*t(asg-parm)%*%solve(sigm)%*%(asg-parm)<=crt_val)
}
print(difftime(Sys.time(),st,units="secs"))
mean(cover_ibs)
mean(cover_ebs)
mean(cover_orc)
rm(list=ls())
setwd("C:/Users/Hp/Documents/GitHub/Batch_Means_Online/logistic")
st <- Sys.time()
library(MASS)
library(matrixcalc)
source("gradnt_log.R")
source("ebs_batch_mean.R")
source("ibs_jasa_mean.R")
source("sqrt_mat.R")
Rep <- 100
cutf <- 1000 #Dropping initial Iterates of SGD
#Sample Size
n <- 1e5+cutf;
#Significance level
qlev <- 0.05
crt_val <- qnorm(1-qlev/2)
#Iterations
alp <- .505
nparm <- 5
parm <- seq(0,1,length=nparm+1)
parm <- parm[-1]
am <- numeric(1000)
Iter <- n;
sg <- matrix(nrow = Iter, ncol = nparm);
sg_ct <- matrix(nrow = Iter - cutf, ncol = nparm)
#Iterates stored
# Sigma Matrix Stored with Square root
sigm <- 1*diag(nparm)
sqrt_sig <- sqrt_mat(sigm)
forb_ebs <- forb_ibs <- numeric(Rep)
volm_ebs <- volm_ibs <- numeric(Rep)
cover_ebs <- cover_ibs <- cover_orc <- numeric(Rep)
sigm <- matrix(rep(0,nparm^2),nrow=nparm,ncol=nparm)
niter <- 1e5
for ( rp in 1:niter){
x1 <- rnorm(nparm)
sigm <- sigm + x1%*%t(x1)/(c((1+exp(t(x1)%*%parm))*(1+exp(-t(x1)%*%parm))*niter))
}
#1000  Replications to obtain stable mses
for(cn in 1 : Rep){
if(cn>=2){n <- n+cutf}
#Data Generated
x <- matrix(rnorm(n*nparm),nrow=n,ncol=nparm)
x <- x%*%sqrt_sig
p1 <- 1/(1 + exp(-x %*% parm))# Prob of success for 1 (1-p1 is for -1)
y<-2*rbinom(n,size=1,prob=p1)-1
#Learning Rate
eta <- numeric(Iter)
sg[1,] <- rep(0, nparm)
for(i in 2 : Iter){
eta[i] <- i^(-alp)
sg[i,] <- sg[i-1,] - 0.5* eta[i] * gradnt_log(y[i],x[i,],sg[i-1,])
}
sg_ct <- sg[(cutf+1):Iter,]
asg <- colMeans(  sg_ct)
n <- n - cutf
#Variance-Covariance Estimate
ebs_mean <- ebs_batch_mean(sg_ct,alp)
ibs_mean <- ibs_jasa_mean(sg_ct,alp)
#Norm Difference
forb_ebs[cn] <- sqrt(sum((ebs_mean-solve(sigm))^2))/sqrt(sum(sigm^2))
forb_ibs[cn] <- sqrt(sum((ibs_mean-solve(sigm))^2))/sqrt(sum(sigm^2))
# Volume of the matrix
volm_ebs[cn] <- (det(ebs_mean))^(1/nparm)
volm_ibs[cn] <- (det(ibs_mean))^(1/nparm)
#critical value calculation
ons <- rep(1,nparm)
low_ebs <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%ebs_mean%*%ons)/n)
up_ebs <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%ebs_mean%*%ons)/n)
cover_ebs[cn] <- as.numeric (t(ons)%*%parm<=up_ebs&t(ons)%*%parm>=low_ebs)
low_ibs <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%ibs_mean%*%ons)/n)
up_ibs <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%ibs_mean%*%ons)/n)
cover_ibs[cn] <- as.numeric (t(ons)%*%parm<=up_ibs&t(ons)%*%parm>=low_ibs)
low_orc <- t(ons)%*%asg-crt_val*sqrt((t(ons)%*%solve(sigm)%*%ons)/n)
up_orc <- t(ons)%*%asg+crt_val*sqrt((t(ons)%*%solve(sigm)%*%ons)/n)
cover_orc[cn] <- as.numeric (t(ons)%*%parm<=up_orc&t(ons)%*%parm>=low_orc)
#cover_ebs[cn] <- as.numeric(n*t(asg-parm)%*%solve(ebs_mean)%*%(asg-parm)<=crt_val)
#cover_ibs[cn] <- as.numeric(n*t(asg-parm)%*%solve(ibs_mean)%*%(asg-parm)<=crt_val)
#cover_orc[cn] <- as.numeric(n*t(asg-parm)%*%solve(sigm)%*%(asg-parm)<=crt_val)
}
print(difftime(Sys.time(),st,units="secs"))
mean(cover_ibs)
mean(cover_ebs)
mean(cover_orc)
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin","sep="))
}
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData","sep="))
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData","sep="))
}
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
}
cover_orc
cover_ibs
cover_ebs
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- matrix(nrow=11,ncol=length(sq_n))
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[k,1] <- mean( cover_orc)
cover_all[k,2] <- mean( cover_ibs)
cover_all[k,3:11] <- colMeans(cover_ebs)
}
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- matrix(nrow=11,ncol=length(sq_n))
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[n,1] <- mean( cover_orc)
cover_all[n,2] <- mean( cover_ibs)
cover_all[n,3:11] <- colMeans(cover_ebs)
}
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- matrix(nrow=11,ncol=length(sq_n))
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[1,n] <- mean( cover_orc)
cover_all[2,n] <- mean( cover_ibs)
cover_all[3:11,n] <- colMeans(cover_ebs)
}
cover_all
?avar
?var
?varp
var(1:10)
sum(c(1:10)^2)/10-25
sum(c(1:10)^2)/9-25
sum(c(1:10)^2)/10-(5.5)^2
sum(c(1:10)^2)/9-(5.5)^2
sum((c(1:10)-5.5)^2)/9
sum((c(1:10)-5.5)^2)/10
?sd
sd(1:10)
sd(1:10)^2
ColSds(1:10)
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- matrix(nrow=11,ncol=length(sq_n))
forb_norm_all <- matrix(nrow=11,ncol=length(sq_n))
sd_cover <- matrix(nrow=11,ncol=length(sq_n))
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[1,n] <- mean( cover_orc)
cover_all[2,n] <- mean( cover_ibs)
cover_all[3:11,n] <- colMeans(cover_ebs)
sd_cover[1,n] <- sd( cover_orc)
sd_cover[2,n] <- sd( cover_ibs)
sd_cover[3:11,n] <- apply(cover_ebs,2,sd)
}
sd_cover
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- matrix(nrow=11,ncol=length(sq_n))
forb_norm_all <- matrix(nrow=11,ncol=length(sq_n))
sd_cover <- sd_forb_norm <- matrix(nrow=11,ncol=length(sq_n))
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[1,n] <- mean( cover_orc)
cover_all[2,n] <- mean( cover_ibs)
cover_all[3:11,n] <- colMeans(cover_ebs)
sd_cover[1,n] <- sd( cover_orc)
sd_cover[2,n] <- sd( cover_ibs)
sd_cover[3:11,n] <- apply(cover_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_norm_details_",sq_n[n],"_lin.RData",sep=""))
forb_norm_all[1,n] <- sqrt(5)
forb_norm_all[2,n] <- mean( forb_ibs_norm)
forb_norm_all[2:10,n] <- colMeans(forb_ebs_norm)
sd_forb_norm[1,n] <- 0
sd_forb_norm[2,n] <- sd( forb_ibs_norm)
sd_forb_norm[3:11,n] <- apply(forb_ebs_norm,2,sd)
}
sd_forb_norm
forb_norm_all
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- matrix(nrow=11,ncol=length(sq_n))
forb_norm_all <- matrix(nrow=11,ncol=length(sq_n))
sd_cover <- sd_forb_norm <- matrix(nrow=11,ncol=length(sq_n))
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[1,n] <- mean( cover_orc)
cover_all[2,n] <- mean( cover_ibs)
cover_all[3:11,n] <- colMeans(cover_ebs)
sd_cover[1,n] <- sd( cover_orc)
sd_cover[2,n] <- sd( cover_ibs)
sd_cover[3:11,n] <- apply(cover_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_norm_details_",sq_n[n],"_lin.RData",sep=""))
forb_norm_all[1,n] <- sqrt(5)
forb_norm_all[2,n] <- mean( forb_ibs_norm)
forb_norm_all[3:11,n] <- colMeans(forb_ebs_norm)
sd_forb_norm[1,n] <- 0
sd_forb_norm[2,n] <- sd( forb_ibs_norm)
sd_forb_norm[3:11,n] <- apply(forb_ebs_norm,2,sd)
}
forb_norm_all
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- forb_norm_all  <- matrix(nrow=11,ncol=length(sq_n))
volm_all <- sd_volm <- matrix(nrow=11,ncol=length(sq_n))
forb_all <- sd_forb <- matrix(nrow=11,ncol=length(sq_n))
sd_cover <- sd_forb_norm <- matrix(nrow=11,ncol=length(sq_n))
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[1,n] <- mean( cover_orc)
cover_all[2,n] <- mean( cover_ibs)
cover_all[3:11,n] <- colMeans(cover_ebs)
sd_cover[1,n] <- sd( cover_orc)
sd_cover[2,n] <- sd( cover_ibs)
sd_cover[3:11,n] <- apply(cover_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_norm_details_",sq_n[n],"_lin.RData",sep=""))
forb_norm_all[1,n] <- sqrt(5)
forb_norm_all[2,n] <- mean( forb_ibs_norm)
forb_norm_all[3:11,n] <- colMeans(forb_ebs_norm)
sd_forb_norm[1,n] <- 0
sd_forb_norm[2,n] <- sd( forb_ibs_norm)
sd_forb_norm[3:11,n] <- apply(forb_ebs_norm,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/volm_details_",sq_n[n],"_lin.RData",sep=""))
volm_all[1,n] <- 1
volm_all[2,n] <- mean( volm_ibs)
volm_all[3:11,n] <- colMeans(volm_ebs)
sd_volm[1,n] <- 0
sd_volm[2,n] <- sd( volm_ibs)
sd_volm[3:11,n] <- apply(volm_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_details_",sq_n[n],"_lin.RData",sep=""))
forb_all[1,n] <- 0
forb_all[2,n] <- mean( forb_ibs)
forb_all[3:11,n] <- colMeans(forb_ebs)
sd_forb[1,n] <- 0
sd_forb[2,n] <- sd( forb_ibs)
sd_forb[3:11,n] <- apply(forb_ebs,2,sd)
}
sd_forb
