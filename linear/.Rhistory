df <- as.data.frame(cbind(sq_n,cover_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+
xlab("Sample Size") +
ylab("Coverage Rates") + guides(fill=guide_legend("my awesome title"))
print(p)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+
scale_colour_discrete(name="participant")+
xlab("Sample Size") +
ylab("Coverage Rates") + guides(fill=guide_legend("my awesome title"))
print(p)
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- forb_norm_all  <- matrix(nrow=length(sq_n),ncol=11)
volm_all <- sd_volm <- matrix(nrow=length(sq_n),ncol=11)
forb_all <- sd_forb <- matrix(nrow=length(sq_n),ncol=11)
sd_cover <- sd_forb_norm <- matrix(nrow=length(sq_n),ncol=11)
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[n,1] <- mean( cover_orc)
cover_all[n,2] <- mean( cover_ibs)
cover_all[n,3:11] <- colMeans(cover_ebs)
sd_cover[n,1] <- sd( cover_orc)
sd_cover[n,2] <- sd( cover_ibs)
sd_cover[n,3:11] <- apply(cover_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_norm_details_",sq_n[n],"_lin.RData",sep=""))
forb_norm_all[n,1] <- sqrt(5)
forb_norm_all[n,2] <- mean( forb_ibs_norm)
forb_norm_all[n,3:11] <- colMeans(forb_ebs_norm)
sd_forb_norm[n,1] <- 0
sd_forb_norm[n,2] <- sd( forb_ibs_norm)
sd_forb_norm[n,3:11] <- apply(forb_ebs_norm,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/volm_details_",sq_n[n],"_lin.RData",sep=""))
volm_all[n,1] <- 1
volm_all[n,2] <- mean( volm_ibs)
volm_all[n,3:11] <- colMeans(volm_ebs)
sd_volm[n,1] <- 0
sd_volm[n,2] <- sd( volm_ibs)
sd_volm[n,3:11] <- apply(volm_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_details_",sq_n[n],"_lin.RData",sep=""))
forb_all[n,1] <- 0
forb_all[n,2] <- mean( forb_ibs)
forb_all[n,3:11] <- colMeans(forb_ebs)
sd_forb[n,1] <- 0
sd_forb[n,2] <- sd( forb_ibs)
sd_forb[n,3:11] <- apply(forb_ebs,2,sd)
}
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
df <- as.data.frame(cbind(sq_n,cover_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Coverage Rates")
print(p)
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- forb_norm_all  <- matrix(nrow=length(sq_n),ncol=11)
volm_all <- sd_volm <- matrix(nrow=length(sq_n),ncol=11)
forb_all <- sd_forb <- matrix(nrow=length(sq_n),ncol=11)
sd_cover <- sd_forb_norm <- matrix(nrow=length(sq_n),ncol=11)
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[n,1] <- mean( cover_orc)
cover_all[n,2] <- mean( cover_ibs)
cover_all[n,3:11] <- colMeans(cover_ebs)
sd_cover[n,1] <- sd( cover_orc)
sd_cover[n,2] <- sd( cover_ibs)
sd_cover[n,3:11] <- apply(cover_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_norm_details_",sq_n[n],"_lin.RData",sep=""))
forb_norm_all[n,1] <- sqrt(5)
forb_norm_all[n,2] <- mean( forb_ibs_norm)
forb_norm_all[n,3:11] <- colMeans(forb_ebs_norm)
sd_forb_norm[n,1] <- 0
sd_forb_norm[n,2] <- sd( forb_ibs_norm)
sd_forb_norm[n,3:11] <- apply(forb_ebs_norm,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/volm_details_",sq_n[n],"_lin.RData",sep=""))
volm_all[n,1] <- 1
volm_all[n,2] <- mean( volm_ibs)
volm_all[n,3:11] <- colMeans(volm_ebs)
sd_volm[n,1] <- 0
sd_volm[n,2] <- sd( volm_ibs)
sd_volm[n,3:11] <- apply(volm_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_details_",sq_n[n],"_lin.RData",sep=""))
forb_all[n,1] <- 0
forb_all[n,2] <- mean( forb_ibs)
forb_all[n,3:11] <- colMeans(forb_ebs)
sd_forb[n,1] <- 0
sd_forb[n,2] <- sd( forb_ibs)
sd_forb[n,3:11] <- apply(forb_ebs,2,sd)
}
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
df <- as.data.frame(cbind(sq_n,cover_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = y + se,
ymin = y - se))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Coverage Rates")
print(p)
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- forb_norm_all  <- matrix(nrow=length(sq_n),ncol=11)
volm_all <- sd_volm <- matrix(nrow=length(sq_n),ncol=11)
forb_all <- sd_forb <- matrix(nrow=length(sq_n),ncol=11)
sd_cover <- sd_forb_norm <- matrix(nrow=length(sq_n),ncol=11)
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[n,1] <- mean( cover_orc)
cover_all[n,2] <- mean( cover_ibs)
cover_all[n,3:11] <- colMeans(cover_ebs)
sd_cover[n,1] <- sd( cover_orc)
sd_cover[n,2] <- sd( cover_ibs)
sd_cover[n,3:11] <- apply(cover_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_norm_details_",sq_n[n],"_lin.RData",sep=""))
forb_norm_all[n,1] <- sqrt(5)
forb_norm_all[n,2] <- mean( forb_ibs_norm)
forb_norm_all[n,3:11] <- colMeans(forb_ebs_norm)
sd_forb_norm[n,1] <- 0
sd_forb_norm[n,2] <- sd( forb_ibs_norm)
sd_forb_norm[n,3:11] <- apply(forb_ebs_norm,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/volm_details_",sq_n[n],"_lin.RData",sep=""))
volm_all[n,1] <- 1
volm_all[n,2] <- mean( volm_ibs)
volm_all[n,3:11] <- colMeans(volm_ebs)
sd_volm[n,1] <- 0
sd_volm[n,2] <- sd( volm_ibs)
sd_volm[n,3:11] <- apply(volm_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_details_",sq_n[n],"_lin.RData",sep=""))
forb_all[n,1] <- 0
forb_all[n,2] <- mean( forb_ibs)
forb_all[n,3:11] <- colMeans(forb_ebs)
sd_forb[n,1] <- 0
sd_forb[n,2] <- sd( forb_ibs)
sd_forb[n,3:11] <- apply(forb_ebs,2,sd)
}
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
df <- as.data.frame(cbind(sq_n,cover_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = cover_all + sd_cover,
ymin = cover_all - sd_cover))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Coverage Rates")
print(p)
df <- as.data.frame(cbind(sq_n,volm_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = volm_all + sd_volm,
ymin = volm_all - sd_volm))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("volmage Rates")
print(p)
df <- as.data.frame(cbind(sq_n,volm_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = volm_all + sd_volm,
ymin = volm_all - sd_volm))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Volume")
print(p)
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
df <- as.data.frame(cbind(sq_n,forb_norm_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = forb_norm_all + sd_forb_norm,
ymin = forb_norm_all - sd_forb_norm))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Self Frobenious Norm")
print(p)
df <- as.data.frame(cbind(sq_n,forb_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = forb_all + sd_forb,
ymin = forb_all - sd_forb))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Relative Frobenious Norm")
print(p)
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- forb_norm_all  <- matrix(nrow=length(sq_n),ncol=11)
volm_all <- sd_volm <- matrix(nrow=length(sq_n),ncol=11)
forb_all <- sd_forb <- matrix(nrow=length(sq_n),ncol=11)
sd_cover <- sd_forb_norm <- matrix(nrow=length(sq_n),ncol=11)
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[n,1] <- mean( cover_orc)
cover_all[n,2] <- mean( cover_ibs)
cover_all[n,3:11] <- colMeans(cover_ebs)
sd_cover[n,1] <- sd( cover_orc)
sd_cover[n,2] <- sd( cover_ibs)
sd_cover[n,3:11] <- apply(cover_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_norm_details_",sq_n[n],"_lin.RData",sep=""))
forb_norm_all[n,1] <- sqrt(5)
forb_norm_all[n,2] <- mean( forb_ibs_norm)
forb_norm_all[n,3:11] <- colMeans(forb_ebs_norm)
sd_forb_norm[n,1] <- 0
sd_forb_norm[n,2] <- sd( forb_ibs_norm)
sd_forb_norm[n,3:11] <- apply(forb_ebs_norm,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/volm_details_",sq_n[n],"_lin.RData",sep=""))
volm_all[n,1] <- 1
volm_all[n,2] <- mean( volm_ibs)
volm_all[n,3:11] <- colMeans(volm_ebs)
sd_volm[n,1] <- 0
sd_volm[n,2] <- sd( volm_ibs)
sd_volm[n,3:11] <- apply(volm_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_details_",sq_n[n],"_lin.RData",sep=""))
forb_all[n,1] <- 0
forb_all[n,2] <- mean( forb_ibs)
forb_all[n,3:11] <- colMeans(forb_ebs)
sd_forb[n,1] <- 0
sd_forb[n,2] <- sd( forb_ibs)
sd_forb[n,3:11] <- apply(forb_ebs,2,sd)
}
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
df <- as.data.frame(cbind(sq_n,cover_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = cover_all + sd_cover,
ymin = cover_all - sd_cover))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Coverage Rates")
print(p)
df <- as.data.frame(cbind(sq_n,volm_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = volm_all + sd_volm,
ymin = volm_all - sd_volm))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Volume")
print(p)
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
df <- as.data.frame(cbind(sq_n,forb_norm_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = forb_norm_all + sd_forb_norm,
ymin = forb_norm_all - sd_forb_norm))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Self Frobenius Norm")
print(p)
df <- as.data.frame(cbind(sq_n,forb_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = forb_all + sd_forb,
ymin = forb_all - sd_forb))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Relative Frobenius Norm")
print(p)
rm(list = ls())
sq_n <- c("5e4","1e5","2e5","5e5","1e6","5e6")
cover_all <- forb_norm_all  <- matrix(nrow=length(sq_n),ncol=11)
volm_all <- sd_volm <- matrix(nrow=length(sq_n),ncol=11)
forb_all <- sd_forb <- matrix(nrow=length(sq_n),ncol=11)
sd_cover <- sd_forb_norm <- matrix(nrow=length(sq_n),ncol=11)
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/cover_details_",sq_n[n],"_lin.RData",sep=""))
cover_all[n,1] <- mean( cover_orc)
cover_all[n,2] <- mean( cover_ibs)
cover_all[n,3:11] <- colMeans(cover_ebs)
sd_cover[n,1] <- sd( cover_orc)
sd_cover[n,2] <- sd( cover_ibs)
sd_cover[n,3:11] <- apply(cover_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_norm_details_",sq_n[n],"_lin.RData",sep=""))
forb_norm_all[n,1] <- sqrt(5)
forb_norm_all[n,2] <- mean( forb_ibs_norm)
forb_norm_all[n,3:11] <- colMeans(forb_ebs_norm)
sd_forb_norm[n,1] <- 0
sd_forb_norm[n,2] <- sd( forb_ibs_norm)
sd_forb_norm[n,3:11] <- apply(forb_ebs_norm,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/volm_details_",sq_n[n],"_lin.RData",sep=""))
volm_all[n,1] <- 1
volm_all[n,2] <- mean( volm_ibs)
volm_all[n,3:11] <- colMeans(volm_ebs)
sd_volm[n,1] <- 0
sd_volm[n,2] <- sd( volm_ibs)
sd_volm[n,3:11] <- apply(volm_ebs,2,sd)
}
for(n in 1:length(sq_n)){
load(paste("C:/Users/Hp/Documents/mcmc_with_rahul/latest_simul_results_matherver/forb_details_",sq_n[n],"_lin.RData",sep=""))
forb_all[n,1] <- 0
forb_all[n,2] <- mean( forb_ibs)
forb_all[n,3:11] <- colMeans(forb_ebs)
sd_forb[n,1] <- 0
sd_forb[n,2] <- sd( forb_ibs)
sd_forb[n,3:11] <- apply(forb_ebs,2,sd)
}
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
df <- as.data.frame(cbind(sq_n,cover_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = cover_all + sd_cover,
ymin = cover_all - sd_cover))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Coverage Rates")
print(p)
df <- as.data.frame(cbind(sq_n,volm_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = volm_all + sd_volm,
ymin = volm_all - sd_volm))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Volume")
print(p)
sq_n <- c(5e4,1e5,2e5,5e5,1e6,5e6)
df <- as.data.frame(cbind(sq_n,forb_norm_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = forb_norm_all + sd_forb_norm,
ymin = forb_norm_all - sd_forb_norm))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Self Frobenius Norm")
print(p)
df <- as.data.frame(cbind(sq_n,forb_all))
colnames(df) <- c("Sample_Size","Oracle", "IBS","c=0.1 beta1","c=0.1 beta2", "c=0.1 beta3", "c=1 beta1",  "c=1 beta2", "c=1 beta3", "c=2 beta1", "c=2 beta2", "c=2 beta3")
library(reshape2)
df <- melt(df, id.vars="Sample_Size")
library(ggplot2)
p<- ggplot(df, aes(Sample_Size,value, col=variable)) +
geom_point()+geom_line()+ geom_errorbar(aes(ymax = forb_all + sd_forb,
ymin = forb_all - sd_forb))+
scale_colour_discrete(name="Estimators")+
xlab("Sample Size") +
ylab("Relative Frobenius Norm")
print(p)
sd_cover
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(100)
rnorm(100)
set.seed(10)
rnorm(100)
set.seed(10)
rnorm(100)
set.seed(10)
rnorm(100)-rnorm(10)
set.seed(10)
rnorm(100)
rnorm(100)-rnorm(100)
rnorm(100)-rnorm(100)
rnorm(100)-rnorm(100)
rnorm(100)-rnorm(100)
rnorm(100)-rnorm(100)
rnorm(100)-rnorm(100)
rnorm(100)-rnorm(100)
rnorm(100)-rnorm(100)
rnorm(100)-rnorm(100)
set.seed(10)
rnorm(100)-rnorm(100)
set.seed(10)
rnorm(100)-rnorm(100)
set.seed(10)
rnorm(100)-rnorm(100)
rnorm(100)
rnorm(100)
set.seed(10)
c(rnorm(10),rnorm(10))
rnorm(20)
set.seed(10)
c(rnorm(10),rnorm(10))
set.seed(10)
rnorm(20)
nparm <- 2
seq(1/nparm,1,length.out=nparm)
nparm <- 20
seq(1/nparm,1,length.out=nparm)
library(doParallel)
install.packages("doParallel")
library(doParallel)
library(foreach)
?seq_along
setwd("C:/Users/Hp/Documents/GitHub/Batch_Means_Online")
rm(list=ls())
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
source("grad_lin_and_batch.R")
source("./../ebs_batch_mean.R")
source("./../ibs_jasa_mean.R")
source("./../sqrt_mat.R")
max_sam <- 1e6
nparm <- 5
linear_batch_fn(max_sam = max_sam, nparm = nparm, Rep = 20, ncores_par = 30)#max(detectCores() - 5, 1)
foo <- paste("out/linear_indep_n_",max_sam,"_dim_",nparm,".RData",sep="")
load(foo)
setwd("C:/Users/Hp/Documents/GitHub/Batch_Means_Online/linear")
rm(list=ls())
set.seed(1)
library(MASS)
library(doParallel)
library(foreach)
library(mcmcse)
source("grad_lin_and_batch.R")
source("./../ebs_batch_mean.R")
source("./../ibs_jasa_mean.R")
source("./../sqrt_mat.R")
max_sam <- 1e6
nparm <- 5
linear_batch_fn(max_sam = max_sam, nparm = nparm, Rep = 20, ncores_par = 30)#max(detectCores() - 5, 1)
foo <- paste("out/linear_indep_n_",max_sam,"_dim_",nparm,".RData",sep="")
load(foo)
cover_orc
